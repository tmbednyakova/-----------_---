{
"disciplins_name":"Введение в программирование",
"year":"2023",
"uni_name":"Федеральное государственное бюджетное образовательное учреждение высшего образования Университет «Дубна» (государственный университет «Дубна»)",
"faculty":"Институт системного анализа и управления",
"department":"Кафедра распределенных информационно-вычислительных систем",
"direction_of_study":"09.03.01 Информатика и вычислительная техника",
"profile":"Технология разработки программного обеспечения",
"level_education":"бакалавриат",
"form_education":"очная",
"teacher":"Беднякова Т.М.",
"protocol":"№23 от «09» июня 2023 г.",
"goals":"<p>Цель изучения дисциплины «Введение в программирование» соотносится с общими целями образовательной программы (далее – ОПОП ВО) по направлению подготовки
09.03.01 Информатика и вычислительная техника.</p>
<p>Быстрое восприятие и обработка больших объемов информации требуют от
современного человека хорошего логического мышления. Обучение программированию
позволяет разработать и развить эту форму мышления. Помимо этого, профессиональная
подготовка современного специалиста в области информационных технологий требует
понимания процессов разработки программного обеспечения, умения определять
необходимые структуры данных и алгоритмы их обработки. Таким образом, целями
освоения данной дисциплины являются:</p>
<ol>
<li>развитие у студентов алгоритмического мышления в степени, необходимой для
быстрого и полного освоения компьютерных технологий;</li>
развитие способности видеть и формулировать задачи новых применений компьютера
в будущей профессиональной деятельности тем;</li>
<li>формирование профессиональных компетенций в области разработки
информационных систем в соответствии с требованиями ФГОС ВО по данному
направлению подготовки 09.03.01 Информатика и вычислительная техника;</li>
<li>обучение методике оценки качества функционирования разработанной программы;</li>
<li>разъяснение понимания места и роли программирования в будущей
профессиональной деятельности.</li>
<p>Объектами профессиональной деятельности в рамках изучаемой дисциплины
(модуля) являются: программное обеспечение средств вычислительной техники и
автоматизированных систем (программы, программные комплексы и системы);
математическое, информационное, техническое, лингвистическое, программное,
эргономическое, организационное и правовое обеспечение перечисленных систем.</p>",
"place":"обязательная дисциплина базовой части",
"semester":"1",
"certification":"экзамен",
"place_more_text":"Программа опирается на знания по арифметике, алгебре, теории элементарных функций и геометрии в объеме средней школы, а также на знание областей применения компьютера и основ информатики на основе школьного курса информатики.
",
"competencies":[
    {
        "competencies":"ОПК-8. Способен разрабатывать алгоритмы и программы, пригодные для практического применения.",
        "indicators":["И(ОПК-8)-1 Формализует и предлагает алгоритмическое решение поставленной задачи.", "И(ОПК-8)-2 Разрабатывает программы, пригодные для практического использования."]
    }
],
"zet":"4",
"content":[
    {
        "theme":"История развития программирования.",
        "lectures":1,
        "seminars":0,
        "independent_work":1
    },
    {
        "theme":"Алгоритмы: свойства, типы, способы записи.",
        "lectures":1,
        "seminars":2,
        "independent_work":2
    },
    {
        "theme":"Знакомство с языком программирования Python.",
        "lectures":1,
        "seminars":1,
        "independent_work":2
    },
    {
        "theme":"Переменные, как способ хранения данных. Типизация в
        языках программирования.",
        "lectures":1,
        "seminars":1,
        "independent_work":2
    },
    {
        "theme":"Арифметические операции.",
        "lectures":1,
        "seminars":1,
        "independent_work":2
    },
    {
        "theme":"Условные алгоритмы. Логические выражения и
        операторы.",
        "lectures":1,
        "seminars":1,
        "independent_work":2
    },
    {
        "theme":"Циклические алгоритмы, цикл с условием while.",
        "lectures":1,
        "seminars":1,
        "independent_work":2
    },
    {
        "theme":"Функции в программирование. ",
        "lectures":1,
        "seminars":1,
        "independent_work":2
    },
    {
        "theme":"Цикл for, списки. Алгоритмы обработки списков.",
        "lectures":1,
        "seminars":1,
        "independent_work":2
    },
    {
        "theme":"Алгоритмы сортировки.",
        "lectures":1,
        "seminars":1,
        "independent_work":2
    },
    {
        "theme":"Оценка сложности алгоритма.",
        "lectures":1,
        "seminars":1,
        "independent_work":2
    },
    {
        "theme":"Понятие рекурсии, примеры рекурсивных алгоритмов.",
        "lectures":1,
        "seminars":1,
        "independent_work":2
    },
    {
        "theme":"Модуль для работы с графикой Turtle (Python).",
        "lectures":1,
        "seminars":1,
        "independent_work":2
    },
    {
        "theme":"Введение в ООП, понятия объект, класс.
        Взаимоотношения между классами.",
        "lectures":1,
        "seminars":1,
        "independent_work":2
    },
    {
        "theme":"Стек, алгоритмы на основе стека, очередь.",
        "lectures":1,
        "seminars":1,
        "independent_work":2
    },
    {
        "theme":"Строки, операции над строками. Алгоритмы обработки
        строк.",
        "lectures":1,
        "seminars":1,
        "independent_work":2
    },
    {
        "theme":"Отладка программ.",
        "lectures":1,
        "seminars":1,
        "independent_work":2
    },
    {
        "theme":"Чтение и запись данных в файл.",
        "lectures":1,
        "seminars":1,
        "independent_work":2
    },
    {
        "theme":"Структуры данных: кортежи, множества и словари.",
        "lectures":1,
        "seminars":1,
        "independent_work":2
    },
    {
        "theme":"Функции как объект. Лямбда функции. ",
        "lectures":1,
        "seminars":1,
        "independent_work":2
    },
    {
        "theme":"Определение операторов. Переопределения функций и
        декораторы. 'Магические функции'.",
        "lectures":1,
        "seminars":1,
        "independent_work":2
    },
    {
        "theme":"Система контроля версий Git, назначение, порядок
        работы",
        "lectures":1,
        "seminars":1,
        "independent_work":2
    },
    {
        "theme":"Тестирование приложений.",
        "lectures":1,
        "seminars":1,
        "independent_work":2
    },
    {
        "theme":"Пример создания приложения.",
        "lectures":1,
        "seminars":1,
        "independent_work":2
    }
],
"content_more_text":
"<ul>
<li>История развития программирования.</li>
<li>Алгоритмы: свойства, типы, способы записи.</li>
Понятие и свойства алгоритмов. Линейные, условные и циклические алгоритмы. Способы записи алгоритмов. Примеры алгоритмов.</li>
<li>Знакомство с языком программирования Python. Консольный ввод и вывод данных. Среда разработки. Особенности синтаксиса.</li>
<li>Переменные, как способ хранения данных. Типизации в языках программирования. Типы данных. Преобразование типов. Хранение данных в памяти компьютера. Ссылочный тип данных и тип значение.</li>
<li>Арифметические операции. Основы работы с вещественными числами, округление.</li>
<li>Условные алгоритмы. Логические выражения и операторы. Синтаксис условных операторов в Python.</li>
<li>Циклические алгоритмы, цикл с условием while. Алгоритмы вычисление суммы ряда: с заданной точностью, рекуррентного ряда.</li>
Алгоритмы обработки числовых последовательностей. Алгоритм Евклида. Подсчет количества цифр в числе. Проверка, является ли число простым.</li>
<li>Функции в программирование.
Локальный и глобальный контекст. Параметры функций.</li>
<li>Цикл for, списки. Операции над списками. Алгоритмы обработки списков. Поиск минимального (максимального) значения в списке.
Алгоритмы обработки списков (вычисление суммы, подсчет количества элементов, удовлетворяющих заданному условию).
Алгоритмы обработки списков, с учетом дополнительного условия. Алгоритм перемешивание массива. Алгоритмы поиска простых
чисел (Решето Эратосфена)</li>
<li>Алгоритмы сортировки: выбора, пузырек, улучшенный пузырек, шейкер, вставками, Шелла, быстрая сортировка.</li>
<li>Эффективность программы, алгоритма. Оценка сложности алгоритма.</li>
<li>Понятие рекурсии, примеры рекурсивных алгоритмов: Рекурсивные алгоритмы: вычисление факториала, кривая дракона, ханойские
башни, числа Фибоначчи.</li>
<li>Модуль для работы с графикой Turtle (Python).</li>
<li>Введение в ООП, понятия объект, класс. Взаимоотношения между классами. Основные принципы ООП: инкапсуляция.
полиморфизм, наследование.</li>
<li>Стек, алгоритмы на основе стека, очередь.</li>
<li>Строки, операции над строками. Алгоритмы обработки строк.</li>
<li>Ошибки и исключения. Обработка исключений.</li>
<li>Отладка программ.</li>
<li>Чтение и запись данных в файл.</li>
<li>Структуры данных: кортежи, множества и словари.</li>
<li> Функции как объект. Лямбда функции. Работа со списками без использования операторов цикла.</li>
<li> Определение операторов. Переопределения функций и декораторы. “Магические функции”.</li>
<li>Система контроля версий Git, назначение, порядок работы.</li>
<li>Пример создания приложения.</li>
<li> Тестирование приложений.</li></ol>",
"content_template_more_text":"
<p>При реализации дисциплины организуется практическая подготовка путем
проведения практических занятий, предусматривающих участие обучающихся в выполнении
отдельных элементов работ, связанных с будущей профессиональной деятельностью (68
часов).</p>
<p>Практическая подготовка также включает в себя отдельные занятия лекционного
типа, которые предусматривают передачу учебной информации обучающимся, необходимой
для последующего выполнения работ, связанных с будущей профессиональной
деятельностью (34 часа).</p>
<p>Практическая подготовка при изучении дисциплины реализуется непосредственно в
университете.</p>",
"methodological_support_template":"<p>Для обеспечения реализации программы дисциплины разработаны:</p>
<ol>
<li>методические материалы к практическим (семинарским) и к лекционным занятиям;</li>
<li>методические материалы по организации самостоятельной работы обучающихся;</li>
<li>методические материалы по организации изучения дисциплины с применением электронного обучения, дистанционных образовательных технологий;</li>
<li>методические рекомендации для обучающихся с ограниченными возможностями здоровья и инвалидов по освоению программы дисциплины.</li>
<li>Методические материалы по дисциплине (модулю) и образовательной программе в целом представлены на официальном сайте образовательной организации (раздел «Сведения об образовательной организации» – Образование – Образовательные программы).</li></ol>",
"assessment_tools_template":"
<p>
                Для аттестации обучающихся на соответствие их персональных достижений поэтапным требованиям образовательной программы по дисциплине (модулю) разработаны фонды оценочных средств, позволяющие оценить результаты обучения (знания, умения, навыки) и сформированные (формируемые) компетенции. Эти фонды включают теоретические вопросы, типовые практические задания, контрольные работы, домашние работы, тесты и иные оценочные материалы, используемые при проведении процедур текущего контроля успеваемости и промежуточной аттестации. Фонды оценочных средств представлены в приложении к рабочей программе.
                </p>
                <p>
                    При необходимости обучающиеся с ограниченными возможностями здоровья и инвалиды обеспечиваются оценочными материалами в формах, адаптированных к ограничениям их здоровья и восприятия информации:
                </p>
                <ol>
                    <i>Для лиц с нарушениями зрения:</i>
                    <li>в печатной форме увеличенным шрифтом,</li>
                    <li> в форме электронного документа,</li>
                    <li> в форме аудиофайла,</li>
                    <li> в печатной форме на языке Брайля.</li>
                    <i>Для лиц с нарушениями слуха:</i>
                    <li>в печатной форме,</li>
                    <li>в форме электронного документа.</li>
                   <i> Для лиц с нарушениями опорно-двигательного аппарата:</i>
                   <li>в печатной форме,</li>
                   <li>в форме электронного документа,</li>
                   <li>в форме аудиофайла.</li>
                </ol>",
"textbook":"
<p>1. Бэрри, П. Изучаем программирование на Python / Бэрри Пол, перевод с английского
М. А. Райтман. — М.: Э, 2018. — 624 с.: ил. — (Мировой компьютерный
бестселлер). — ISBN 978-5-699-98595-1.</p>
<p>2. Гэддис, Т. Начинаем программировать на Python / Гэддис Тони. — 4-е изд. — СПб.:
БХВ-Петербург, 2019. — 768 с.: ил. — Предм.указ.:с.739. — ISBN 978-5-9775-4002-
5.</p>
<p>3. Лутц М. Python: карманный справочник / Лутц Марк. — 5-е изд. — М.: Вильямс,
2019. — 320 с.: ил. — Предм.указ.:с.313. — ISBN 978-5-907114-60-9.</p>
<p>4. Вайсфельд, М. Объектно-ориентированное мышление / Вайсфельд Мэтт. — СПб.:
Питер, 2014. — 304 с.: ил. — (Библиотека программиста). — ISBN 9785496007931</p>
",
"additional_textbook":"
<p>5. Кнут, Д.Э. Искусство программирования. Т. 1. Основные алгоритмы. / Д.Э. Кнут. —
М.: Вильямс, 2016. — 720 c.</p>
<p>6. Кнут, Д.Э. Искусство программирования. Т.3. Сортировка и поиск. / Д.Э. Кнут. —
М.: Вильямс, 2014. — 832 c.</p>
<p>7. Макконнелл, С. Совершенный код. Мастер-класс / Стив Макконнелл. — СПб.: БХВПетербург, 201 . — 896 с.— ISBN: 978-5-9909805-1-8</p>
<p>8. Бэрри, П. Изучаем программирование на Python / Пол Бэрри.— М.: Эксмо, 2019. —
624 с.— 978-5-699-98595-1</p>
<p>9. Бейдер, Д. Чистый Python. Тонкости программирования для профи / Дэн Бейдер. —
СПб.: Питер, 2018. — 288 с.: ил. — (Серия «Библиотека программиста»).— ISBN 978-
5-4461-0803-9</p>
",
"professional information resources":"
<p>1. Электронно-библиотечная система «Университетская библиотека онлайн»:
www.bibloclub.ru
<p>2. Электронно-библиотечная система «ЮРАЙТ» https://biblio-online.ru
<p>3. Научная электронная библиотека (НЭБ): http://elibrary.ru/defaultx.asp
<p>4. Электронно-библиотечная система «Znanium» http://znanium.com/
<p>5. БД российских журналов East View : http://dlib.eastview.com
<p>6. Базы данных компании EBSCO Publishing: http://search.ebscohost.com/
<p>7. БД российских научных журналов на Elibrary.ru (РУНЭБ):
http://elibrary.ru/defaultx.asp.
<p>8. http://www.scopus.com/home.url</p>
<p>9. Web of Science webofknowledge.com</p>
Профессиональные ресурсы сети «Интернет»
<p>10. Материалы https://habrahabr.ru/flows/develop/</p>
<p> 11.Материалы Национального открытого университета ИНТУИТ:
http://www.intuit.ru/studies/higher_education</p>
<p>12. Сообщество аналитиков: http://www.uml2.ru/.</p> 
",
"software":"
Visual Studio Code (1.57.0)<br>
PyCharm (2021.1.1)",
"logistics_template":"
<p>
                    Для проведения лекционных занятий требуется специализированная аудитория,оснащенная компьютером, проектором, электронной доской.
                </p>
                <p>
                    Для проведения семинарских занятий требуется специализированный компьютерный класс, подключенный к сети Интернет и обеспечением доступа в электронную информационно-образовательную среду организации.
                </p>
                <p>
                    Обучающиеся из числа инвалидов и лиц с ограниченными возможностями здоровья могут использовать специализированное программное и материально-техническое обеспечение:
                </p>
                <p>
                    − обучающиеся с нарушениями опорно-двигательного аппарата при необходимости могут использовать адаптивные технические средства: функцию «сенсорная клавиатура», «управление указателем мыши с клавиатуры», специально оборудованные джойстики, увеличенные выносные кнопки, клавиатуры с большими клавишами или накладки «Клавита»; <br>
                    − обучающиеся с ограничениями по зрению могут прослушать доступный аудиоматериал или прочитать тексты, увеличив шрифт на экране монитора компьютера. Рекомендуется использовать экранную лупу и другие визуальные вспомогательные средства, чтобы изменить шрифт текста, межстрочный интервал, синхронизацию с речью и т.д., программы экранного доступа (скринридеры для прочтения текстовой информации через синтезированную речь) и/или включить функцию «экранного диктора» на персональном компьютере с операционной системой Windows 7, 8, 10, Vista, XP. Студенты с полным 10 отсутствием зрения могут использовать тексты, напечатанные шрифтом Брайля, а для набора текста на компьютере – клавиатуры Брайля; <br>
                    − обучающиеся с ограничениями по слуху могут воспользоваться индивидуальными техническими средствами (аппараты «Глобус», «Монолог», индивидуальными слуховыми аппаратами, компьютерной аудиогарнитурой, наушниками и др.) при прослушиваниинеобходимой информации, а также услугами сурдопереводчика <br>
                </p>
                <p>
                    При необходимости обучающиеся с ограниченными возможностями здоровья и инвалиды обеспечиваются печатными и (или) электронными образовательными ресурсами (образовательная программа, учебники, учебные пособия и др.) в формах, адаптированных к ограничениям их здоровья и восприятия информации:
                </p>
                <ol>
                    <i>Для лиц с нарушениями зрения:</i>
                    <li>в печатной форме увеличенным шрифтом,</li>
                    <li> в форме электронного документа,</li>
                    <li> в форме аудиофайла,</li>
                    <li> в печатной форме на языке Брайля.</li>
                    <i>Для лиц с нарушениями слуха:</i>
                    <li>в печатной форме,</li>
                    <li>в форме электронного документа.</li>
                   <i> Для лиц с нарушениями опорно-двигательного аппарата:</i>
                   <li>в печатной форме,</li>
                   <li>в форме электронного документа,</li>
                   <li>в форме аудиофайла.</li>
                </ol>"
}